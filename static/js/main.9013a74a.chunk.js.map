{"version":3,"sources":["Images/place1.jpg","components/Mainpg/main.js","components/Projpg/projcard.js","components/Contactpg/form.js","components/Projpg/proj.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","__webpack_require__","p","MainPage","react_default","a","createElement","className","id","href","tabindex","aria-disabled","ProjectCard","props","_useState","useState","github","link","Object","slicedToArray","console","log","key","name","desc","site","ContactForm","ProjectPage","Projects","map","card","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9013a74a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/place1.32b6fb4e.jpg\";","import React from \"react\";\r\n\r\nexport default function MainPage() {\r\n  return (\r\n    <div className=\"container-fluid\" id=\"homepg\">\r\n      <nav className=\"nav flex-column\">\r\n        <a className=\"nav-link active\" href=\"/\">\r\n          Main Page\r\n        </a>\r\n        <a className=\"nav-link\" href=\"/project\">\r\n          Portfolio\r\n        </a>\r\n\r\n        <a\r\n          className=\"nav-link\"\r\n          href=\"https://www.linkedin.com/in/troy-fasnacht-0648679b\"\r\n          tabindex=\"-1\"\r\n          aria-disabled=\"true\"\r\n        >\r\n          Linkedin\r\n        </a>\r\n      </nav>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"jumbotron\" id=\"titlepage\">\r\n          <h1 className=\"display-4\">Troy Fasnacht Web Development</h1>\r\n          <h3> Full stack web development</h3>\r\n          <p className=\"lead\">\r\n            An entry level web developer recently graduated from the Trilogy Web\r\n            Develepment Boot Camp\r\n          </p>\r\n        </div>\r\n        b de\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Projectone from \"../../Images/place1.jpg\";\r\n\r\nexport default function ProjectCard(props) {\r\n  const [link] = useState(props.github);\r\n\r\n  console.log(\"component\", link);\r\n  return (\r\n    <div className=\"col-md center-block\" key={props.id} id=\"card\">\r\n      <div className=\"card mx-auto\">\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{props.name}</h5>\r\n          <p className=\"card-text\">{props.desc}</p>\r\n          <a href={link} className=\"btn btn-primary btn-lg\" id=\"gitbutton\">\r\n            Github\r\n          </a>\r\n          <a\r\n            href={props.site}\r\n            className=\"btn btn-primary btn-lg\r\n            \"\r\n            id=\"sitebutton\"\r\n          >\r\n            Website\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function ContactForm() {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"jumbotron\">\r\n        <h1 className=\"display-4\">Contact</h1>\r\n        <p className=\"lead\">\r\n          If you would like to contact me concerning possible web development\r\n          opportunities feel free to email me at taf442001@yahoo.com. Vist my\r\n          linkedin profile at the link below\r\n        </p>\r\n        <a\r\n          href=\"https://www.linkedin.com/in/troy-fasnacht-0648679b\"\r\n          className=\"btn btn-primary btn-block\"\r\n          id=\"linkbutton\"\r\n        >\r\n          Linkedin\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ProjectCard from \"./projcard\";\r\nimport Projects from \"./project.json\";\r\nimport Contact from \"../Contactpg/form.js\";\r\n\r\nexport default function ProjectPage() {\r\n  return (\r\n    <div id=\"projects\">\r\n      <nav className=\"nav flex-column\">\r\n        <a className=\"nav-link active\" href=\"/\">\r\n          Main Page\r\n        </a>\r\n        <a className=\"nav-link\" href=\"/project\">\r\n          Portfolio\r\n        </a>\r\n\r\n        <a\r\n          className=\"nav-link \"\r\n          href=\"https://www.linkedin.com/in/troy-fasnacht-0648679b\"\r\n          tabindex=\"-1\"\r\n          aria-disabled=\"true\"\r\n        >\r\n          Linkedin\r\n        </a>\r\n      </nav>\r\n      <div className=\"row\">\r\n        {Projects.map(card => (\r\n          <ProjectCard\r\n            id={card.id}\r\n            name={card.name}\r\n            desc={card.desc}\r\n            github={card.github}\r\n            site={card.site}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"row\" id=\"spacerrow\" />\r\n      <div className=\"row\">\r\n        <Contact />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport MainPage from \"./components/Mainpg/main\";\nimport ProjectPage from \"./components/Projpg/proj\";\nimport ContactForm from \"./components/Contactpg/form\";\nimport \"./App.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <Route exact path=\"/\" component={MainPage} />\n      <Route path=\"/project\" component={ProjectPage} />\n    </BrowserRouter>\n  );\n}\n"],"sourceRoot":""}